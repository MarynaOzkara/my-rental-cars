{"version":3,"file":"static/js/622.75a66a73.chunk.js","mappings":"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","sources":["assets/icons/icons.svg","components/ExercisesCategories/ExercisesCategories.styled.js","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/ExercisesCategories/ExercisesCategories.jsx","helpers/capitalizeString.js","redux/selectors.js"],"sourcesContent":["var _symbol;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-ellipse\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#e6533c\",\n    style: {\n      fill: \"var(--color1, #e6533c)\"\n    },\n    d: \"M32 16c0 8.837-7.163 16-16 16s-16-7.163-16-16c0-8.837 7.163-16 16-16s16 7.163 16 16z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-back-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.7733,\n    d: \"M16 29.867l-13.867-13.867M2.133 16l13.867-13.867M2.133 16h27.733\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.f6733ea511ea7581573262b3f04c198c.svg\";\nexport { ForwardRef as ReactComponent };","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ExercisesCategoriesWrap = styled.div`\n  /* display: flex;\n  align-items: center;\n  justify-content: space-between; */\n`;\nexport const SubCategoriesWrap = styled.div`\n  margin: 0 auto;\n`;\nexport const SubCategoryList = styled.ul`\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  list-style-type: none;\n  margin-top: 64px;\n`;\nexport const SubCategoryItem = styled.li`\n  width: calc((100% - 4 * 16px) / 5);\n`;\nexport const SubCategoryLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n`;\nexport const SubCategoryWrap = styled.div`\n  border-radius: 12px;\n  overflow: hidden;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n\n  background-image: linear-gradient(\n    0deg,\n    rgba(4, 4, 4, 0.5) 0%,\n    rgba(4, 4, 4, 0.5) 100%\n  );\n  position: relative;\n`;\nexport const SubCategoryImg = styled.img`\n  display: block;\n  width: 100%;\n`;\nexport const DescriptionWrap = styled.div`\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nexport const SubCategoryTitle = styled.p`\n  color: #efede8;\n  font-family: Roboto;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 32px; /* 133.333% */\n  white-space: nowrap;\n`;\nexport const CategoryTitle = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-family: Roboto;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 150% */\n`;\n","import styled from 'styled-components';\n\nexport const PaginationWrap = styled.div`\n  margin-top: 32px;\n`;\nexport const PaginationList = styled.ul`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n`;\nexport const NavigationBtn = styled.button`\n  width: 14px;\n  height: 14px;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  border: 1.5px solid #e6533c;\n  background-color: transparent;\n  border-radius: 50%;\n  position: relative;\n  /* background-color: rgba(239, 237, 232, 0.1); */\n`;\nexport const NavigationDot = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 8px;\n  height: 8px;\n  fill: #e6533c;\n`;\n","import { useDispatch } from 'react-redux';\nimport { getCategories } from '../../redux/exercises-api';\nimport {\n  PaginationWrap,\n  PaginationList,\n  NavigationBtn,\n  NavigationDot,\n} from './Pagination.styled';\nimport icons from '../../assets/icons/icons.svg';\n\nconst Pagination = ({ limit, total, category, page }) => {\n  const dispatch = useDispatch();\n  const pageNubers = [];\n  const numbersDots = Math.ceil(total / limit);\n  for (let i = 1; i <= numbersDots; i++) {\n    pageNubers.push(i);\n  }\n  console.log(page);\n\n  return (\n    <PaginationWrap>\n      <PaginationList>\n        {pageNubers.map(number => (\n          <li key={number}>\n            <NavigationBtn\n              onClick={() => {\n                // console.log(number);\n                dispatch(getCategories({ category: category, page: number }));\n              }}\n            >\n              <NavigationDot>\n                <use href={`${icons}#icon-ellipse`}></use>\n              </NavigationDot>\n            </NavigationBtn>\n          </li>\n        ))}\n      </PaginationList>\n    </PaginationWrap>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectCategory,\n  selectLimitCategories,\n  selectListCategories,\n  selectPageCategories,\n  selectTotalCategories,\n} from '../../redux/selectors';\nimport {\n  SubCategoryLink,\n  SubCategoryItem,\n  SubCategoryList,\n  SubCategoryImg,\n  SubCategoryWrap,\n  DescriptionWrap,\n  SubCategoryTitle,\n  CategoryTitle,\n  SubCategoriesWrap,\n} from './ExercisesCategories.styled';\nimport capitalizeString from '../../helpers/capitalizeString';\nimport { useLocation } from 'react-router';\nimport Pagination from 'components/Pagination/Pagination';\n\nconst ExercisesCategories = () => {\n  const category = useSelector(selectCategory);\n  const subCategories = useSelector(selectListCategories);\n  const page = useSelector(selectPageCategories);\n  const total = useSelector(selectTotalCategories);\n  const limit = useSelector(selectLimitCategories);\n  const location = useLocation();\n\n  // console.log(category);\n  // console.log(page);\n  // console.log(total);\n  // console.log(limit);\n  return (\n    <>\n      <SubCategoriesWrap>\n        <SubCategoryList>\n          {subCategories.map(({ _id, name, imgURL, filter }) => (\n            <SubCategoryItem key={_id}>\n              <SubCategoryLink to={name} state={{ from: location }}>\n                <SubCategoryWrap>\n                  <SubCategoryImg src={imgURL} alt={name} />\n                  <DescriptionWrap>\n                    <SubCategoryTitle>\n                      {capitalizeString(name)}\n                    </SubCategoryTitle>\n                    <CategoryTitle>{filter}</CategoryTitle>\n                  </DescriptionWrap>\n                </SubCategoryWrap>\n              </SubCategoryLink>\n            </SubCategoryItem>\n          ))}\n        </SubCategoryList>\n      </SubCategoriesWrap>\n\n      {total > 10 && (\n        <Pagination\n          page={page}\n          category={category}\n          limit={limit}\n          total={total}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ExercisesCategories;\n","const capitalizeString = str => {\n  const firstChar = str.charAt(0);\n  const upperFirstChar = firstChar.toUpperCase();\n  const restOfString = str.slice(1);\n  return upperFirstChar + restOfString;\n};\nexport default capitalizeString;\n","export const selectCategory = state => state.categories.category;\nexport const selectListCategories = state => state.categories.items;\nexport const selectPageCategories = state => state.categories.page;\nexport const selectLimitCategories = state => state.categories.limit;\nexport const selectTotalCategories = state => state.categories.total;\nexport const selectExercises = state => state.exercises.items;\nexport const selectPageExercises = state => state.exercises.page;\nexport const selectTotalExercises = state => state.exercises.total;\nexport const selectLimitExercises = state => state.exercises.limit;\n"],"names":["SubCategoriesWrap","styled","SubCategoryList","SubCategoryItem","SubCategoryLink","Link","SubCategoryWrap","SubCategoryImg","DescriptionWrap","SubCategoryTitle","CategoryTitle","PaginationWrap","PaginationList","NavigationBtn","NavigationDot","limit","total","category","page","dispatch","useDispatch","pageNubers","numbersDots","Math","ceil","i","push","console","log","map","number","onClick","getCategories","href","icons","useSelector","selectCategory","subCategories","selectListCategories","selectPageCategories","selectTotalCategories","selectLimitCategories","location","useLocation","_id","name","imgURL","filter","to","state","from","src","alt","capitalizeString","str","charAt","toUpperCase","slice","categories","items","selectExercises","exercises","selectPageExercises","selectTotalExercises","selectLimitExercises"],"sourceRoot":""}