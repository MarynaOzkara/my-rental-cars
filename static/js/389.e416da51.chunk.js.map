{"version":3,"file":"static/js/389.e416da51.chunk.js","mappings":"6HAqDA,IAAe,IAA0B,yD,qBC/CzC,IANyB,SAAAA,GAIvB,OAHkBA,EAAIC,OAAO,GACIC,cACZF,EAAIG,MAAM,EAEhC,C,iICFYC,EAAUC,EAAAA,GAAAA,IAAH,wDAIPC,GAAeD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kcAwBZG,EAAcH,EAAAA,GAAAA,IAAH,qGAKXI,EAAiBJ,EAAAA,GAAAA,IAAH,2CAGdK,EAAgBL,EAAAA,GAAAA,IAAH,8D,qCCP1B,EA1BsB,WACpB,IAKMM,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UAPiB,CACjB,CAAES,MAAO,aAAcC,SAAU,YACjC,CAAED,MAAO,YAAaC,SAAU,aAChC,CAAED,MAAO,UAAWC,SAAU,WAKhBC,KAAI,WAAsBC,GAAtB,IAAGH,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,yBACE,SAACR,EAAD,CACEW,GAAIH,EACJI,QAAS,WACPP,GAASQ,EAAAA,EAAAA,GAAYN,IACrBF,GAASS,EAAAA,EAAAA,GAAc,CAAEN,SAAUD,IACpC,EALH,SAOGA,KARIG,EADK,KAerB,EC5BYK,EAAQhB,EAAAA,GAAAA,GAAH,sKCSlB,EARkB,SAAC,GAAe,IAAbQ,EAAY,EAAZA,MACnB,OACE,+BACE,SAACQ,EAAD,UAAQR,KAGb,E,oBCPYS,EAAUjB,EAAAA,GAAAA,OAAH,sMAWPkB,EAAUlB,EAAAA,GAAAA,EAAH,gHAKPmB,EAAYnB,EAAAA,GAAAA,IAAH,8F,UCMtB,EApBkB,WAChB,IACQoB,GADSC,EAAAA,EAAAA,MACSC,MAAlBF,KACFG,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIN,GAIZ,OACE,+BACE,UAACH,EAAD,CAASJ,QAAS,WAJpBU,EAASH,EAAKO,SAIM,EAAlB,WACE,SAACR,EAAD,WACE,gBAAKS,KAAI,UAAKC,EAAAA,EAAL,yBAEX,SAACX,EAAD,uBAIP,EC0BD,EAlCkB,WAChB,IAAQY,GAAgBC,EAAAA,EAAAA,MAAhBD,YAGFxB,GAAWC,EAAAA,EAAAA,MAKjB,OAHAyB,EAAAA,EAAAA,YAAU,WACR1B,GAASS,EAAAA,EAAAA,GAAc,CAAEN,SAAU,eACpC,GAAE,CAACH,KAEF,gCACGwB,IACC,SAACzB,EAAD,WACE,SAAC,EAAD,OAGJ,UAACF,EAAD,WACG2B,GACC,SAAC,EAAD,CAAWtB,OAAOyB,EAAAA,EAAAA,GAAiBH,MAEnC,SAAC,EAAD,CAAWtB,MAAM,eAGnB,SAAC,EAAD,QAEF,SAACJ,EAAD,WACE,SAAC,EAAA8B,SAAD,CAAUC,SAAS,aAAnB,UACE,SAAC,KAAD,UAKT,C","sources":["assets/icons/icons.svg","helpers/capitalizeString.js","components/CagegoriesNav/CategoriesNav.styled.js","components/CagegoriesNav/CategoriesNav.jsx","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.jsx","pages/Exercises.jsx"],"sourcesContent":["var _symbol;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-ellipse\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#e6533c\",\n    style: {\n      fill: \"var(--color1, #e6533c)\"\n    },\n    d: \"M32 16c0 8.837-7.163 16-16 16s-16-7.163-16-16c0-8.837 7.163-16 16-16s16 7.163 16 16z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-back-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.7733,\n    d: \"M16 29.867l-13.867-13.867M2.133 16l13.867-13.867M2.133 16h27.733\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.f6733ea511ea7581573262b3f04c198c.svg\";\nexport { ForwardRef as ReactComponent };","const capitalizeString = str => {\n  const firstChar = str.charAt(0);\n  const upperFirstChar = firstChar.toUpperCase();\n  const restOfString = str.slice(1);\n  return upperFirstChar + restOfString;\n};\nexport default capitalizeString;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavWrap = styled.div`\n  display: flex;\n  gap: 32px;\n`;\nexport const CategoryLink = styled(NavLink)`\n  color: rgba(239, 237, 232, 0.4);\n  font-family: Roboto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n  position: relative;\n  &.active {\n    color: #efede8;\n  }\n  &.active::after {\n    position: absolute;\n    display: block;\n    content: '';\n    width: 100%;\n    height: 4px;\n    left: 0;\n    bottom: -8px;\n\n    background-color: #ef8964;\n    border-radius: 2px;\n  }\n`;\nexport const NavPageWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const CategoriesWrap = styled.div`\n  margin: 0 auto;\n`;\nexport const GoBackBtnWrap = styled.div`\n  position: absolute;\n  top: 116px;\n`;\n","import React from 'react';\nimport { CategoryLink, NavWrap } from './CategoriesNav.styled';\nimport { setCategory } from '../../redux/categories/categoriesSlice';\nimport { useDispatch } from 'react-redux';\nimport { getCategories } from '../../redux/exercises-api';\n\nconst CategoriesNav = () => {\n  const categories = [\n    { title: 'Body parts', category: 'bodyPart' },\n    { title: 'Equipment', category: 'equipment' },\n    { title: 'Muscles', category: 'target' },\n  ];\n  const dispatch = useDispatch();\n  return (\n    <NavWrap>\n      {categories.map(({ title, category }, index) => (\n        <li key={index}>\n          <CategoryLink\n            to={category}\n            onClick={() => {\n              dispatch(setCategory(title));\n              dispatch(getCategories({ category: title }));\n            }}\n          >\n            {title}\n          </CategoryLink>\n        </li>\n      ))}\n    </NavWrap>\n  );\n};\n\nexport default CategoriesNav;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: #efede8;\n  font-family: Roboto;\n  font-size: 32px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 44px; /* 137.5% */\n`;\n","import React from 'react';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n    </>\n  );\n};\n\nexport default TitlePage;\n","import styled from 'styled-components';\n\nexport const BackBtn = styled.button`\n  display: block;\n  border: none;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\nexport const TextBtn = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 16px;\n  line-height: 1.5; /* 150% */\n`;\nexport const ArrowIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: rgba(239, 237, 232, 0.4);\n`;\n","import { useLocation, useNavigate } from 'react-router';\nimport { BackBtn, ArrowIcon, TextBtn } from './GoBackBtn.styled';\nimport icons from '../../assets/icons/icons.svg';\n\nconst GoBackBtn = () => {\n  const location = useLocation();\n  const { from } = location.state;\n  const navigate = useNavigate();\n  console.log(from);\n  const handleClickBackBtn = () => {\n    navigate(from.pathname);\n  };\n  return (\n    <>\n      <BackBtn onClick={() => handleClickBackBtn()}>\n        <ArrowIcon>\n          <use href={`${icons}#icon-back-arrow`}></use>\n        </ArrowIcon>\n        <TextBtn>Back</TextBtn>\n      </BackBtn>\n    </>\n  );\n};\n\nexport default GoBackBtn;\n","import CategoriesNav from 'components/CagegoriesNav/CategoriesNav';\nimport {\n  NavPageWrap,\n  CategoriesWrap,\n  GoBackBtnWrap,\n} from 'components/CagegoriesNav/CategoriesNav.styled';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport React, { Suspense, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport capitalizeString from '../helpers/capitalizeString';\nimport { Outlet, useParams } from 'react-router';\nimport { getCategories } from '../redux/exercises-api';\nimport GoBackBtn from 'components/GoBackBtn/GoBackBtn';\n\nconst Exercises = () => {\n  const { subCategory } = useParams();\n  // console.log(category);\n  // console.log(subCategory);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCategories({ category: 'Body parts' }));\n  }, [dispatch]);\n  return (\n    <>\n      {subCategory && (\n        <GoBackBtnWrap>\n          <GoBackBtn />\n        </GoBackBtnWrap>\n      )}\n      <NavPageWrap>\n        {subCategory ? (\n          <TitlePage title={capitalizeString(subCategory)} />\n        ) : (\n          <TitlePage title=\"Exercises\" />\n        )}\n\n        <CategoriesNav />\n      </NavPageWrap>\n      <CategoriesWrap>\n        <Suspense fallback=\"Loading...\">\n          <Outlet />\n        </Suspense>\n      </CategoriesWrap>\n    </>\n  );\n};\n\nexport default Exercises;\n"],"names":["str","charAt","toUpperCase","slice","NavWrap","styled","CategoryLink","NavLink","NavPageWrap","CategoriesWrap","GoBackBtnWrap","dispatch","useDispatch","title","category","map","index","to","onClick","setCategory","getCategories","Title","BackBtn","TextBtn","ArrowIcon","from","useLocation","state","navigate","useNavigate","console","log","pathname","href","icons","subCategory","useParams","useEffect","capitalizeString","Suspense","fallback"],"sourceRoot":""}