{"version":3,"file":"static/js/406.04010539.chunk.js","mappings":"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","sources":["components/ExercisesList/ExercisesList.styled.js","components/ExercisesList/ExercisesListItem.jsx","components/ExercisesList/ExercisesList.jsx","helpers/capitalizeString.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ExercisesListWrap = styled.ul`\n  width: 850px;\n  height: 487px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-top: 32px;\n\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    width: 8px;\n    background-color: rgba(239, 237, 232, 0.1);\n    border-radius: 12px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #ef8964;\n    border-radius: 12px;\n  }\n`;\nexport const ExerciseItemWrap = styled.li`\n  width: 405px;\n`;\nexport const ExerciseItem = styled.div`\n  width: 405px;\n  height: 141px;\n  padding: 16px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n`;\nexport const ItemTopBloc = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Workout = styled.p`\n  padding: 5px 7.5px;\n  font-size: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  border-radius: 4px;\n`;\n\nexport const StartBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n`;\n\nexport const StartBtn = styled.p`\n  font-size: 14px;\n  color: #e6533c;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: #e6533c;\n`;\n\nexport const ExerciseTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n\n  margin-top: 33px;\n  margin-bottom: 8px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 23px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 27px;\n  }\n`;\n\nexport const FigureIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: #efede8;\n  fill: #efede8;\n  background-color: #efa082;\n  border-radius: 50%;\n  padding: 4px 5px;\n`;\n\nexport const ExerciseTitle = styled.p`\n  font-size: #efede8;\n  font-size: 20px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const TargetsList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const TargetsListItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 12px;\n`;\n\nexport const TargetsListTitle = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  white-space: nowrap;\n`;\n\nexport const TargetsListText = styled.p`\n  color: #efede8;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n`;\n","import React from 'react';\nimport {\n  ExerciseItem,\n  ExerciseItemWrap,\n  ItemTopBloc,\n  Workout,\n  StartBtnWrapper,\n  StartBtn,\n  ArrowIcon,\n  ExerciseTitleWrapper,\n  FigureIcon,\n  ExerciseTitle,\n  TargetsList,\n  TargetsListItem,\n  TargetsListTitle,\n  TargetsListText,\n} from './ExercisesList.styled';\nimport capitalizeString from '../../helpers/capitalizeString';\n\nconst ExercisesListItem = ({\n  name,\n  bodyPart,\n  equipment,\n  target,\n  gifUrl,\n  burnedCalories,\n  time,\n}) => {\n  return (\n    <ExerciseItemWrap>\n      <ExerciseItem>\n        <ItemTopBloc>\n          <Workout>WORKOUT</Workout>\n          <StartBtnWrapper>\n            <StartBtn onClick={gifUrl}>Start</StartBtn>\n            <ArrowIcon>\n              <use></use>\n            </ArrowIcon>\n          </StartBtnWrapper>\n        </ItemTopBloc>\n        <ExerciseTitleWrapper>\n          <FigureIcon>\n            <use></use>\n          </FigureIcon>\n          <ExerciseTitle>{capitalizeString(name)}</ExerciseTitle>\n        </ExerciseTitleWrapper>\n        <TargetsList>\n          <TargetsListItem>\n            <TargetsListTitle>Burned calories:</TargetsListTitle>\n            <TargetsListText>{burnedCalories}</TargetsListText>\n          </TargetsListItem>\n          <TargetsListItem>\n            <TargetsListTitle>Body part:</TargetsListTitle>\n            <TargetsListText>{bodyPart}</TargetsListText>\n          </TargetsListItem>\n          <TargetsListItem>\n            <TargetsListTitle>Target:</TargetsListTitle>\n            <TargetsListText>{target}</TargetsListText>\n          </TargetsListItem>\n        </TargetsList>\n      </ExerciseItem>\n    </ExerciseItemWrap>\n  );\n};\n\nexport default ExercisesListItem;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getExercises } from '../../redux/exercises-api';\nimport {\n  selectExercises,\n  selectLimitExercises,\n  selectPageExercises,\n  selectTotalExercises,\n} from '../../redux/selectors';\nimport ExercisesListItem from './ExercisesListItem';\nimport { ExercisesListWrap } from './ExercisesList.styled';\n\nimport { setPage } from '../../redux/exercises/exercisesSlice';\n\nconst ExercisesList = () => {\n  const { category, subCategory } = useParams();\n  const dispatch = useDispatch();\n  const exercises = useSelector(selectExercises);\n  const page = useSelector(selectPageExercises);\n  const total = useSelector(selectTotalExercises);\n  const limit = useSelector(selectLimitExercises);\n  const totalPages = Math.ceil(total / limit);\n  console.log(totalPages);\n  console.log(page);\n\n  useEffect(() => {\n    dispatch(\n      getExercises({ category: category, subCategory: subCategory, page: page })\n    );\n  }, [dispatch, category, subCategory, page]);\n\n  const handleNextPage = () => {\n    dispatch(setPage(page + 1));\n  };\n\n  return (\n    <>\n      <ExercisesListWrap>\n        {exercises.map(\n          ({\n            _id,\n            name,\n            bodyPart,\n            equipment,\n            target,\n            gifUrl,\n            burnedCalories,\n            time,\n          }) => (\n            <ExercisesListItem\n              key={_id}\n              name={name}\n              gifUrl={gifUrl}\n              bodyPart={bodyPart}\n              equipment={equipment}\n              target={target}\n              burnedCalories={burnedCalories}\n              time={time}\n            />\n          )\n        )}\n        <button onClick={handleNextPage}>Load more</button>\n      </ExercisesListWrap>\n    </>\n  );\n};\n\nexport default ExercisesList;\n","const capitalizeString = str => {\n  const firstChar = str.charAt(0);\n  const upperFirstChar = firstChar.toUpperCase();\n  const restOfString = str.slice(1);\n  return upperFirstChar + restOfString;\n};\nexport default capitalizeString;\n","export const selectCategory = state => state.categories.category;\nexport const selectListCategories = state => state.categories.items;\nexport const selectPageCategories = state => state.categories.page;\nexport const selectLimitCategories = state => state.categories.limit;\nexport const selectTotalCategories = state => state.categories.total;\nexport const selectExercises = state => state.exercises.items;\nexport const selectPageExercises = state => state.exercises.page;\nexport const selectTotalExercises = state => state.exercises.total;\nexport const selectLimitExercises = state => state.exercises.limit;\n"],"names":["ExercisesListWrap","styled","ExerciseItemWrap","ExerciseItem","ItemTopBloc","Workout","StartBtnWrapper","StartBtn","ArrowIcon","ExerciseTitleWrapper","FigureIcon","ExerciseTitle","TargetsList","TargetsListItem","TargetsListTitle","TargetsListText","name","bodyPart","target","equipment","gifUrl","burnedCalories","time","onClick","capitalizeString","useParams","category","subCategory","dispatch","useDispatch","exercises","useSelector","selectExercises","page","selectPageExercises","total","selectTotalExercises","limit","selectLimitExercises","totalPages","Math","ceil","console","log","useEffect","getExercises","map","_id","setPage","str","charAt","toUpperCase","slice","selectCategory","state","categories","selectListCategories","items","selectPageCategories","selectLimitCategories","selectTotalCategories"],"sourceRoot":""}